import arcpy, sys
import os
from arcpy.sa import*
from xlwt import Workbook, Formula
import xlrd
import numpy as np
import math as m
import pandas as pd

##arcpy.env.overwriteOutput =True

class netCDF:
    def Single_netCDF(self):
        inNetCDF = r"C:\Users\pirmo\OneDrive - The Hong Kong Polytechnic University\LUMIP\land-crop-noIrrig\tsl_Lmon_CESM2_land-crop-noIrrig_r1i1p1f1_gn_185001-201512.nc"
        outLoc = r"C:\Users\pirmo\OneDrive - The Hong Kong Polytechnic University\LUMIP\land-crop-noIrrig\tsl\\"
        if not os.path.isdir(outLoc):
            os.mkdir(outLoc)
        variable = "tsl"
        x_dimension = "lon"
        y_dimension = "lat"
        band_dimension = ""
        dimension = "time"
        valueSelectionMethod = "BY_VALUE"
        nc_FP = arcpy.NetCDFFileProperties(inNetCDF)
        nc_Dim = nc_FP.getDimensions()
        for dimension in nc_Dim:
            top = nc_FP.getDimensionSize(dimension)
            for i in range(0, top):
                if dimension == "time":
                    dimension_values = nc_FP.getDimensionValue(dimension, i)   
                    nowFile = str(dimension_values)
                    ou1=''.join(nowFile.split(' ')[:-1])
                    ou=''.join(ou1.split('-')[0:2])        # for YYYYMM [-1:0:-1] AND for YYYYMMDD [::-1]
                    dv1 = ["time", dimension_values]
                    dimension_values = [dv1]
                    if not os.path.exists(outLoc + ou + ".tif"):
                        arcpy.MakeNetCDFRasterLayer_md(inNetCDF, variable, x_dimension, y_dimension, nowFile, band_dimension, dimension_values, valueSelectionMethod)
##                        arcpy.CopyRaster_management(nowFile, outLoc + ou + ".tif", "", "", "", "NONE", "NONE", "")
                        arcpy.Resample_management(nowFile, outLoc + ou + ".tif", "0.5", "BILINEAR")
                        print (ou)

    def Multiple_netCDF(self):
        path = r"C:\Users\pirmo\OneDrive - The Hong Kong Polytechnic University\LUMIP\land-noLu\evspsblsoi\CMCC-ESM2\\"
        list_dir = os.listdir(path)
        outLoc = r"C:\Users\pirmo\OneDrive - The Hong Kong Polytechnic University\LUMIP\land-noLu\evspsblsoi\CMCC-ESM2\evspsblsoi\\"
        if not os.path.isdir(outLoc):
            os.mkdir(outLoc)           
        variable = "evspsblsoi"
        x_dimension = "lon"
        y_dimension = "lat"
        band_dimension = ""
        dimension = "time"
        valueSelectionMethod = "BY_VALUE"
        for inNetCDF in range(len(list_dir)):
            nc_FP = arcpy.NetCDFFileProperties(path + list_dir [inNetCDF] )
            nc_Dim = nc_FP.getDimensions()
            for dimension in nc_Dim:
                top = nc_FP.getDimensionSize(dimension)
                for i in range(0, top):
                    if dimension == "time":
                        dimension_values = nc_FP.getDimensionValue(dimension, i)
                        nowFile = str(dimension_values)
                        ou1=''.join(nowFile.split(' ')[:-1])
                        ou=''.join(ou1.split('-')[0:2]) 
                        dv1 = ["time", dimension_values]
                        dimension_values = [dv1]
                        if not os.path.exists(outLoc + ou + ".tif"):
                            arcpy.MakeNetCDFRasterLayer_md(path + list_dir [inNetCDF], variable, x_dimension, y_dimension, nowFile, band_dimension, dimension_values, valueSelectionMethod)
##                            arcpy.CopyRaster_management(nowFile, outLoc + ou + ".tif", "", "", "", "NONE", "NONE", "")
                            arcpy.Resample_management(nowFile, outLoc + ou + ".tif", "0.5", "BILINEAR")
                            print (ou)

    def Mean_Model(self):
        data_path1=r"C:\Users\pirmo\OneDrive - The Hong Kong Polytechnic University\LUMIP\land-noLu\evspsblsoi\ACCESS-ESM1-5\evspsblsoi\\"
        data_path2=r"C:\Users\pirmo\OneDrive - The Hong Kong Polytechnic University\LUMIP\land-noLu\evspsblsoi\BCC-CSM2-MR\evspsblsoi\\"
        data_path3=r"C:\Users\pirmo\OneDrive - The Hong Kong Polytechnic University\LUMIP\land-noLu\evspsblsoi\CanESM5\evspsblsoi\\"
        data_path4=r"C:\Users\pirmo\OneDrive - The Hong Kong Polytechnic University\LUMIP\land-noLu\evspsblsoi\CESM2\evspsblsoi\\"
        data_path5=r"C:\Users\pirmo\OneDrive - The Hong Kong Polytechnic University\LUMIP\land-noLu\evspsblsoi\CMCC-ESM2\evspsblsoi\\"
        data_path6=r"C:\Users\pirmo\OneDrive - The Hong Kong Polytechnic University\LUMIP\land-noLu\evspsblsoi\IPSL-CM6A-LR\evspsblsoi\\"


        save_path=r"C:\Users\pirmo\OneDrive - The Hong Kong Polytechnic University\LUMIP\land-noLu\evspsblsoi\Mean_Model\\"
        if not os.path.exists(save_path):
            os.makedirs(save_path)
        arcpy.CheckOutExtension("Spatial")
        arcpy.env.workspace = data_path2
        RasterList=arcpy.ListRasters()
        for ras in RasterList:
            if not os.path.exists(save_path+ras):
                raster1=arcpy.Raster(data_path1+ras)
                raster2=arcpy.Raster(data_path2+ras)
                raster3=arcpy.Raster(data_path3+ras)
                raster4=arcpy.Raster(data_path4+ras)
                raster5=arcpy.Raster(data_path5+ras)
                raster6=arcpy.Raster(data_path6+ras)
               
                outimg=(raster1+raster2+raster3+raster4+raster5+raster6)/6
                outimg.save(save_path+ras)
                print (ras)

    def Annual_Mean(self):
        data_path1 = r"C:\Users\pirmo\OneDrive - The Hong Kong Polytechnic University\LUMIP\land-noLu\tas\Mean_Model\\"
        arcpy.env.workspace=data_path1
        sv = ['1850',	'1851',	'1852',	'1853',	'1854',	'1855',	'1856',	'1857',	'1858',	'1859',	'1860',	'1861',	'1862',	'1863',	'1864',	'1865',	'1866',	'1867',	'1868',	'1869',	'1870',	'1871',	'1872',	'1873',	'1874',	'1875',	'1876',	'1877',	'1878',	'1879',	'1880',	'1881',	'1882',	'1883',	'1884',	'1885',	'1886',	'1887',	'1888',	'1889',	'1890',	'1891',	'1892',	'1893',	'1894',	'1895',	'1896',	'1897',	'1898',	'1899',	'1900',	'1901',	'1902',	'1903',	'1904',	'1905',	'1906',	'1907',	'1908',	'1909',	'1910',	'1911',	'1912',	'1913',	'1914',	'1915',	'1916',	'1917',	'1918',	'1919',	'1920',	'1921',	'1922',	'1923',	'1924',	'1925',	'1926',	'1927',	'1928',	'1929',	'1930',	'1931',	'1932',	'1933',	'1934',	'1935',	'1936',	'1937',	'1938',	'1939',	'1940',	'1941',	'1942',	'1943',	'1944',	'1945',	'1946',	'1947',	'1948',	'1949',	'1950',	'1951',	'1952',	'1953',	'1954',	'1955',	'1956',	'1957',	'1958',	'1959',	'1960',	'1961',	'1962',	'1963',	'1964',	'1965',	'1966',	'1967',	'1968',	'1969',	'1970',	'1971',	'1972',	'1973',	'1974',	'1975',	'1976',	'1977',	'1978',	'1979',	'1980',	'1981',	'1982',	'1983',	'1984',	'1985',	'1986',	'1987',	'1988',	'1989',	'1990',	'1991',	'1992',	'1993',	'1994',	'1995',	'1996',	'1997',	'1998',	'1999',	'2000',	'2001',	'2002',	'2003',	'2004',	'2005',	'2006',	'2007',	'2008',	'2009',	'2010',	'2011',	'2012',	'2013',	'2014']
        #Annual
        save_path1=data_path1+"YearlyMean1\\"  #YearlyMean or YearlySum
        if not os.path.exists(save_path1):
            os.makedirs(save_path1)     
        RasterList = arcpy.ListRasters()     
        dtime1 = ['185001',	'185003',	'185005',	'185007',	'185008',	'185010',	'185012',	'185101',	'185103',	'185105',	'185107',	'185108',	'185110',	'185112',	'185201',	'185203',	'185205',	'185207',	'185208',	'185210',	'185212',	'185301',	'185303',	'185305',	'185307',	'185308',	'185310',	'185312',	'185401',	'185403',	'185405',	'185407',	'185408',	'185410',	'185412',	'185501',	'185503',	'185505',	'185507',	'185508',	'185510',	'185512',	'185601',	'185603',	'185605',	'185607',	'185608',	'185610',	'185612',	'185701',	'185703',	'185705',	'185707',	'185708',	'185710',	'185712',	'185801',	'185803',	'185805',	'185807',	'185808',	'185810',	'185812',	'185901',	'185903',	'185905',	'185907',	'185908',	'185910',	'185912',	'186001',	'186003',	'186005',	'186007',	'186008',	'186010',	'186012',	'186101',	'186103',	'186105',	'186107',	'186108',	'186110',	'186112',	'186201',	'186203',	'186205',	'186207',	'186208',	'186210',	'186212',	'186301',	'186303',	'186305',	'186307',	'186308',	'186310',	'186312',	'186401',	'186403',	'186405',	'186407',	'186408',	'186410',	'186412',	'186501',	'186503',	'186505',	'186507',	'186508',	'186510',	'186512',	'186601',	'186603',	'186605',	'186607',	'186608',	'186610',	'186612',	'186701',	'186703',	'186705',	'186707',	'186708',	'186710',	'186712',	'186801',	'186803',	'186805',	'186807',	'186808',	'186810',	'186812',	'186901',	'186903',	'186905',	'186907',	'186908',	'186910',	'186912',	'187001',	'187003',	'187005',	'187007',	'187008',	'187010',	'187012',	'187101',	'187103',	'187105',	'187107',	'187108',	'187110',	'187112',	'187201',	'187203',	'187205',	'187207',	'187208',	'187210',	'187212',	'187301',	'187303',	'187305',	'187307',	'187308',	'187310',	'187312',	'187401',	'187403',	'187405',	'187407',	'187408',	'187410',	'187412',	'187501',	'187503',	'187505',	'187507',	'187508',	'187510',	'187512',	'187601',	'187603',	'187605',	'187607',	'187608',	'187610',	'187612',	'187701',	'187703',	'187705',	'187707',	'187708',	'187710',	'187712',	'187801',	'187803',	'187805',	'187807',	'187808',	'187810',	'187812',	'187901',	'187903',	'187905',	'187907',	'187908',	'187910',	'187912',	'188001',	'188003',	'188005',	'188007',	'188008',	'188010',	'188012',	'188101',	'188103',	'188105',	'188107',	'188108',	'188110',	'188112',	'188201',	'188203',	'188205',	'188207',	'188208',	'188210',	'188212',	'188301',	'188303',	'188305',	'188307',	'188308',	'188310',	'188312',	'188401',	'188403',	'188405',	'188407',	'188408',	'188410',	'188412',	'188501',	'188503',	'188505',	'188507',	'188508',	'188510',	'188512',	'188601',	'188603',	'188605',	'188607',	'188608',	'188610',	'188612',	'188701',	'188703',	'188705',	'188707',	'188708',	'188710',	'188712',	'188801',	'188803',	'188805',	'188807',	'188808',	'188810',	'188812',	'188901',	'188903',	'188905',	'188907',	'188908',	'188910',	'188912',	'189001',	'189003',	'189005',	'189007',	'189008',	'189010',	'189012',	'189101',	'189103',	'189105',	'189107',	'189108',	'189110',	'189112',	'189201',	'189203',	'189205',	'189207',	'189208',	'189210',	'189212',	'189301',	'189303',	'189305',	'189307',	'189308',	'189310',	'189312',	'189401',	'189403',	'189405',	'189407',	'189408',	'189410',	'189412',	'189501',	'189503',	'189505',	'189507',	'189508',	'189510',	'189512',	'189601',	'189603',	'189605',	'189607',	'189608',	'189610',	'189612',	'189701',	'189703',	'189705',	'189707',	'189708',	'189710',	'189712',	'189801',	'189803',	'189805',	'189807',	'189808',	'189810',	'189812',	'189901',	'189903',	'189905',	'189907',	'189908',	'189910',	'189912',	'190001',	'190003',	'190005',	'190007',	'190008',	'190010',	'190012',	'190101',	'190103',	'190105',	'190107',	'190108',	'190110',	'190112',	'190201',	'190203',	'190205',	'190207',	'190208',	'190210',	'190212',	'190301',	'190303',	'190305',	'190307',	'190308',	'190310',	'190312',	'190401',	'190403',	'190405',	'190407',	'190408',	'190410',	'190412',	'190501',	'190503',	'190505',	'190507',	'190508',	'190510',	'190512',	'190601',	'190603',	'190605',	'190607',	'190608',	'190610',	'190612',	'190701',	'190703',	'190705',	'190707',	'190708',	'190710',	'190712',	'190801',	'190803',	'190805',	'190807',	'190808',	'190810',	'190812',	'190901',	'190903',	'190905',	'190907',	'190908',	'190910',	'190912',	'191001',	'191003',	'191005',	'191007',	'191008',	'191010',	'191012',	'191101',	'191103',	'191105',	'191107',	'191108',	'191110',	'191112',	'191201',	'191203',	'191205',	'191207',	'191208',	'191210',	'191212',	'191301',	'191303',	'191305',	'191307',	'191308',	'191310',	'191312',	'191401',	'191403',	'191405',	'191407',	'191408',	'191410',	'191412',	'191501',	'191503',	'191505',	'191507',	'191508',	'191510',	'191512',	'191601',	'191603',	'191605',	'191607',	'191608',	'191610',	'191612',	'191701',	'191703',	'191705',	'191707',	'191708',	'191710',	'191712',	'191801',	'191803',	'191805',	'191807',	'191808',	'191810',	'191812',	'191901',	'191903',	'191905',	'191907',	'191908',	'191910',	'191912',	'192001',	'192003',	'192005',	'192007',	'192008',	'192010',	'192012',	'192101',	'192103',	'192105',	'192107',	'192108',	'192110',	'192112',	'192201',	'192203',	'192205',	'192207',	'192208',	'192210',	'192212',	'192301',	'192303',	'192305',	'192307',	'192308',	'192310',	'192312',	'192401',	'192403',	'192405',	'192407',	'192408',	'192410',	'192412',	'192501',	'192503',	'192505',	'192507',	'192508',	'192510',	'192512',	'192601',	'192603',	'192605',	'192607',	'192608',	'192610',	'192612',	'192701',	'192703',	'192705',	'192707',	'192708',	'192710',	'192712',	'192801',	'192803',	'192805',	'192807',	'192808',	'192810',	'192812',	'192901',	'192903',	'192905',	'192907',	'192908',	'192910',	'192912',	'193001',	'193003',	'193005',	'193007',	'193008',	'193010',	'193012',	'193101',	'193103',	'193105',	'193107',	'193108',	'193110',	'193112',	'193201',	'193203',	'193205',	'193207',	'193208',	'193210',	'193212',	'193301',	'193303',	'193305',	'193307',	'193308',	'193310',	'193312',	'193401',	'193403',	'193405',	'193407',	'193408',	'193410',	'193412',	'193501',	'193503',	'193505',	'193507',	'193508',	'193510',	'193512',	'193601',	'193603',	'193605',	'193607',	'193608',	'193610',	'193612',	'193701',	'193703',	'193705',	'193707',	'193708',	'193710',	'193712',	'193801',	'193803',	'193805',	'193807',	'193808',	'193810',	'193812',	'193901',	'193903',	'193905',	'193907',	'193908',	'193910',	'193912',	'194001',	'194003',	'194005',	'194007',	'194008',	'194010',	'194012',	'194101',	'194103',	'194105',	'194107',	'194108',	'194110',	'194112',	'194201',	'194203',	'194205',	'194207',	'194208',	'194210',	'194212',	'194301',	'194303',	'194305',	'194307',	'194308',	'194310',	'194312',	'194401',	'194403',	'194405',	'194407',	'194408',	'194410',	'194412',	'194501',	'194503',	'194505',	'194507',	'194508',	'194510',	'194512',	'194601',	'194603',	'194605',	'194607',	'194608',	'194610',	'194612',	'194701',	'194703',	'194705',	'194707',	'194708',	'194710',	'194712',	'194801',	'194803',	'194805',	'194807',	'194808',	'194810',	'194812',	'194901',	'194903',	'194905',	'194907',	'194908',	'194910',	'194912',	'195001',	'195003',	'195005',	'195007',	'195008',	'195010',	'195012',	'195101',	'195103',	'195105',	'195107',	'195108',	'195110',	'195112',	'195201',	'195203',	'195205',	'195207',	'195208',	'195210',	'195212',	'195301',	'195303',	'195305',	'195307',	'195308',	'195310',	'195312',	'195401',	'195403',	'195405',	'195407',	'195408',	'195410',	'195412',	'195501',	'195503',	'195505',	'195507',	'195508',	'195510',	'195512',	'195601',	'195603',	'195605',	'195607',	'195608',	'195610',	'195612',	'195701',	'195703',	'195705',	'195707',	'195708',	'195710',	'195712',	'195801',	'195803',	'195805',	'195807',	'195808',	'195810',	'195812',	'195901',	'195903',	'195905',	'195907',	'195908',	'195910',	'195912',	'196001',	'196003',	'196005',	'196007',	'196008',	'196010',	'196012',	'196101',	'196103',	'196105',	'196107',	'196108',	'196110',	'196112',	'196201',	'196203',	'196205',	'196207',	'196208',	'196210',	'196212',	'196301',	'196303',	'196305',	'196307',	'196308',	'196310',	'196312',	'196401',	'196403',	'196405',	'196407',	'196408',	'196410',	'196412',	'196501',	'196503',	'196505',	'196507',	'196508',	'196510',	'196512',	'196601',	'196603',	'196605',	'196607',	'196608',	'196610',	'196612',	'196701',	'196703',	'196705',	'196707',	'196708',	'196710',	'196712',	'196801',	'196803',	'196805',	'196807',	'196808',	'196810',	'196812',	'196901',	'196903',	'196905',	'196907',	'196908',	'196910',	'196912',	'197001',	'197003',	'197005',	'197007',	'197008',	'197010',	'197012',	'197101',	'197103',	'197105',	'197107',	'197108',	'197110',	'197112',	'197201',	'197203',	'197205',	'197207',	'197208',	'197210',	'197212',	'197301',	'197303',	'197305',	'197307',	'197308',	'197310',	'197312',	'197401',	'197403',	'197405',	'197407',	'197408',	'197410',	'197412',	'197501',	'197503',	'197505',	'197507',	'197508',	'197510',	'197512',	'197601',	'197603',	'197605',	'197607',	'197608',	'197610',	'197612',	'197701',	'197703',	'197705',	'197707',	'197708',	'197710',	'197712',	'197801',	'197803',	'197805',	'197807',	'197808',	'197810',	'197812',	'197901',	'197903',	'197905',	'197907',	'197908',	'197910',	'197912',	'198001',	'198003',	'198005',	'198007',	'198008',	'198010',	'198012',	'198101',	'198103',	'198105',	'198107',	'198108',	'198110',	'198112',	'198201',	'198203',	'198205',	'198207',	'198208',	'198210',	'198212',	'198301',	'198303',	'198305',	'198307',	'198308',	'198310',	'198312',	'198401',	'198403',	'198405',	'198407',	'198408',	'198410',	'198412',	'198501',	'198503',	'198505',	'198507',	'198508',	'198510',	'198512',	'198601',	'198603',	'198605',	'198607',	'198608',	'198610',	'198612',	'198701',	'198703',	'198705',	'198707',	'198708',	'198710',	'198712',	'198801',	'198803',	'198805',	'198807',	'198808',	'198810',	'198812',	'198901',	'198903',	'198905',	'198907',	'198908',	'198910',	'198912',	'199001',	'199003',	'199005',	'199007',	'199008',	'199010',	'199012',	'199101',	'199103',	'199105',	'199107',	'199108',	'199110',	'199112',	'199201',	'199203',	'199205',	'199207',	'199208',	'199210',	'199212',	'199301',	'199303',	'199305',	'199307',	'199308',	'199310',	'199312',	'199401',	'199403',	'199405',	'199407',	'199408',	'199410',	'199412',	'199501',	'199503',	'199505',	'199507',	'199508',	'199510',	'199512',	'199601',	'199603',	'199605',	'199607',	'199608',	'199610',	'199612',	'199701',	'199703',	'199705',	'199707',	'199708',	'199710',	'199712',	'199801',	'199803',	'199805',	'199807',	'199808',	'199810',	'199812',	'199901',	'199903',	'199905',	'199907',	'199908',	'199910',	'199912',	'200001',	'200003',	'200005',	'200007',	'200008',	'200010',	'200012',	'200101',	'200103',	'200105',	'200107',	'200108',	'200110',	'200112',	'200201',	'200203',	'200205',	'200207',	'200208',	'200210',	'200212',	'200301',	'200303',	'200305',	'200307',	'200308',	'200310',	'200312',	'200401',	'200403',	'200405',	'200407',	'200408',	'200410',	'200412',	'200501',	'200503',	'200505',	'200507',	'200508',	'200510',	'200512',	'200601',	'200603',	'200605',	'200607',	'200608',	'200610',	'200612',	'200701',	'200703',	'200705',	'200707',	'200708',	'200710',	'200712',	'200801',	'200803',	'200805',	'200807',	'200808',	'200810',	'200812',	'200901',	'200903',	'200905',	'200907',	'200908',	'200910',	'200912',	'201001',	'201003',	'201005',	'201007',	'201008',	'201010',	'201012',	'201101',	'201103',	'201105',	'201107',	'201108',	'201110',	'201112',	'201201',	'201203',	'201205',	'201207',	'201208',	'201210',	'201212',	'201301',	'201303',	'201305',	'201307',	'201308',	'201310',	'201312',	'201401',	'201403',	'201405',	'201407',	'201408',	'201410',	'201412']
        j=0
        for per in range(len(sv)): 
            rasters = []
            for i in range(7): #
                if not os.path.exists(save_path1+sv[per]+".tif"):
                    rasters.append(data_path1+dtime1[j]+".tif")
                    print ("File", dtime1[j])
                    j = j + 1
            arcpy.gp.CellStatistics_sa(""+";".join(rasters), save_path1+sv[per]+'.tif', "MEAN", "DATA")  #MEAN or SUM or PERCENTILE 90% default
            print ("Year", sv[per])


    def RasterStats(self):
        print ("Please wait Statistics file generating...")
        data_path1=r"C:\Users\pirmo\OneDrive - The Hong Kong Polytechnic University\LUMIP\land-noLu\tas\Mean_Model\YearlyMean\\"
        arcpy.env.workspace=data_path1
        save_path=data_path1+"Statistics\\"
        if not os.path.exists(save_path):
            os.makedirs(save_path)
        arcpy.CheckOutExtension("Spatial")
        RasterList = arcpy.ListRasters()
        book = Workbook()
        sheet1 = book.add_sheet("Raw")
        sheet1.write(0,0, "File Name")
        sheet1.write(0,1, 'Min') 
        sheet1.write(0,2, 'Max')
        sheet1.write(0,3, 'Mean')
        sheet1.write(0,4, 'STD')
        ex_row = 1
        for ras in RasterList:
            if not os.path.exists(save_path+ras):
                sheet1.write(ex_row, 0, ras)
                sheet1.write(ex_row, 1, arcpy.GetRasterProperties_management(ras, "MINIMUM", "").getOutput(0))
                sheet1.write(ex_row, 2, arcpy.GetRasterProperties_management(ras, "MAXIMUM", "").getOutput(0))
                sheet1.write(ex_row, 3, arcpy.GetRasterProperties_management(ras, "MEAN", "").getOutput(0))
                sheet1.write(ex_row, 4, arcpy.GetRasterProperties_management(ras, "STD", "").getOutput(0))
                ex_row = ex_row + 1
                print(ras)
        book.save(save_path+"Stats.xls")

    def All_time_mean(self):
        data_path1 = r"C:\Users\pirmo\OneDrive - The Hong Kong Polytechnic University\LUMIP\land-noLu\tas\Mean_Model\YearlyMean\\"
        arcpy.env.workspace=data_path1
        sv = ['1850-2014']
        #Annual
        save_path1=data_path1+"AllMean\\"  #YearlyMean or YearlySum
        if not os.path.exists(save_path1):
            os.makedirs(save_path1)     
        RasterList = arcpy.ListRasters()     
        dtime1 = ['1850',   '1851',	'1852',	'1853',	'1854',	'1855',	'1856',	'1857',	'1858',	'1859',	'1860',	'1861',	'1862',	'1863',	'1864',	'1865',	'1866',	'1867',	'1868',	'1869',	'1870',	'1871',	'1872',	'1873',	'1874',	'1875',	'1876',	'1877',	'1878',	'1879',	'1880',	'1881',	'1882',	'1883',	'1884',	'1885',	'1886',	'1887',	'1888',	'1889',	'1890',	'1891',	'1892',	'1893',	'1894',	'1895',	'1896',	'1897',	'1898',	'1899',	'1900',	'1901',	'1902',	'1903',	'1904',	'1905',	'1906',	'1907',	'1908',	'1909',	'1910',	'1911',	'1912',	'1913',	'1914',	'1915',	'1916',	'1917',	'1918',	'1919',	'1920',	'1921',	'1922',	'1923',	'1924',	'1925',	'1926',	'1927',	'1928',	'1929',	'1930',	'1931',	'1932',	'1933',	'1934',	'1935',	'1936',	'1937',	'1938',	'1939',	'1940',	'1941',	'1942',	'1943',	'1944',	'1945',	'1946',	'1947',	'1948',	'1949',	'1950',	'1951',	'1952',	'1953',	'1954',	'1955',	'1956',	'1957',	'1958',	'1959',	'1960',	'1961',	'1962',	'1963',	'1964',	'1965',	'1966',	'1967',	'1968',	'1969',	'1970',	'1971',	'1972',	'1973',	'1974',	'1975',	'1976',	'1977',	'1978',	'1979',	'1980',	'1981',	'1982',	'1983',	'1984',	'1985',	'1986',	'1987',	'1988',	'1989',	'1990',	'1991',	'1992',	'1993',	'1994',	'1995',	'1996',	'1997',	'1998',	'1999',	'2000',	'2001',	'2002',	'2003',	'2004',	'2005',	'2006',	'2007',	'2008',	'2009',	'2010',	'2011',	'2012',	'2013',	'2014']
        j=0
        for per in range(len(sv)): 
            rasters = []
            for i in range(165): #
                if not os.path.exists(save_path1+sv[per]+".tif"):
                    rasters.append(data_path1+dtime1[j]+".tif")
                    print ("File", dtime1[j])
                    j = j + 1
            arcpy.gp.CellStatistics_sa(""+";".join(rasters), save_path1+sv[per]+'.tif', "MEAN", "DATA")  #MEAN or SUM or PERCENTILE 90% default
            print ("Year", sv[per])

                     
    def Extract(self):
        print ("Please wait Extract is generating...")
        data_path1=r"C:\Users\pirmo\OneDrive - The Hong Kong Polytechnic University\LUMIP\land-noLu\tsl\Mean_Model\\"
        arcpy.env.workspace=data_path1
        save_path=data_path1+"Extract\\"
        if not os.path.exists(save_path):
            os.makedirs(save_path)
        India_shp=r"C:\Users\pirmo\OneDrive - The Hong Kong Polytechnic University\LUMIP\World_Countries\World_Countries.shp"
        RasterList=arcpy.ListRasters()
        for ras in RasterList:
            if not os.path.exists(save_path+ras):
                ti_img = arcpy.Raster(data_path1+ras)
                arcpy.gp.ExtractByMask_sa(ti_img, India_shp, save_path+ras)
                print(ras)
            
def main():
    output=netCDF()
##    output.Single_netCDF()
##    output.Multiple_netCDF()
##    output.Mean_Model()
##    output.Annual_Mean()
    output.RasterStats()
##    output.All_time_mean()
##    output.Extract()

if __name__ == "__main__":
    main()
